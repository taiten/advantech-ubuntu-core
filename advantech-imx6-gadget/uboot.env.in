baudrate=115200
boot_fdt=try
bootcmd=for mmcdev in ${mmcdevs}; do mmc dev ${mmcdev}; if mmc rescan; then run snappy_boot; fi; done; run netboot;
bootdelay=3
bootscript=echo Running bootscript from mmc ...; source
console=ttymxc1
fdt_addr=0x18000000
fdt_file=imx6q-rsb4411-a1.dtb
fdt_high=0xffffffff
initrd_high=0xffffffff
initrd_addr=0x13000000
initrd_file=initrd.img
ip_dyn=yes
kernel_file=kernel.img
loadaddr=0x12000000
mmcargs=setenv bootargs console=${console},${baudrate} vmalloc=400M console=tty0 root=${mmcroot}
mmcboot=echo Booting from mmc ...; run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootm ${loadaddr} - ${fdt_addr}; else if test ${boot_fdt} = try; then bootm; else echo WARN: Cannot load the DT; fi; fi; else bootm; fi;
mmcdevs=0 1
mmcpart=1
cmd_hdmi=fdt addr ${fdt_addr};fdt set fb_hdmi status okay;fdt set fb_hdmi mode_str 1280x720M@60;
mmcroot=/dev/mmcblk1p2 rootwait rw
netargs=setenv bootargs console=${console},${baudrate} root=/dev/nfs ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp
netboot=echo Booting from net ...; run netargs; if test ${ip_dyn} = yes; then setenv get_cmd dhcp; else setenv get_cmd tftp; fi; ${get_cmd} ${uimage}; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if ${get_cmd} ${fdt_addr} ${fdt_file}; then bootm ${loadaddr} - ${fdt_addr}; else if test ${boot_fdt} = try; then bootm; else echo WARN: Cannot load the DT; fi; fi; else bootm; fi;
reset_cause=11
script=boot.scr
loadfdt=load mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${snap_kernel}/dtbs/${fdt_file}
loadfiles=run loadkernel; run loadinitrd; run loadfdt
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadinitrd=load mmc ${mmcdev}:${mmcpart} ${initrd_addr} ${snap_kernel}/${initrd_file}; setenv initrd_size ${filesize}
loadkernel=load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${snap_kernel}/${kernel_file}
snappy_boot=if test "${snap_mode}" = "try"; then setenv snap_mode "trying"; saveenv; if test "${snap_try_core}" != ""; then setenv snap_core "${snap_try_core}"; fi; if test "${snap_try_kernel}" != ""; then setenv snap_kernel "${snap_try_kernel}"; fi; elif test "${snap_mode}" = "trying"; then setenv snap_mode ""; saveenv; fi; run loadfiles; setenv mmcroot "/dev/disk/by-label/writable ${snappy_cmdline} snap_core=${snap_core} snap_kernel=${snap_kernel}"; run mmcargs; bootz ${loadaddr} ${initrd_addr}:${initrd_size} ${fdt_addr}
snappy_cmdline=rng_core.default_quality=700 net.ifnames=0 init=/lib/systemd/systemd ro panic=-1 fixrtc
